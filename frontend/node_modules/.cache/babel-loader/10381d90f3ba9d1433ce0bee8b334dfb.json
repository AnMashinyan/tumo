{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ani Mashinyan\\\\PhpstormProjects\\\\tumo_task\\\\frontend\\\\src\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    checkLoginStatus();\n  }, []);\n  const checkLoginStatus = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/login-status', {\n        withCredentials: true\n      });\n      setIsLoggedIn(response.data.isLoggedIn);\n    } catch (error) {\n      console.error('Error checking login status:', error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/logout', {\n        withCredentials: true\n      });\n      if (response.data.success) {\n        setIsLoggedIn(false);\n        navigate('/login'); // Redirect to login page after logout\n      }\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tumo Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Header, \"JNNAVcL03XZIkY/1G2PDQyJFRpk=\", false, function () {\n  return [useNavigate];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Header","_s","isLoggedIn","setIsLoggedIn","navigate","checkLoginStatus","response","get","withCredentials","data","error","console","handleLogout","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ani Mashinyan/PhpstormProjects/tumo_task/frontend/src/Header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\n\r\nfunction Header() {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        checkLoginStatus();\r\n    }, []);\r\n\r\n    const checkLoginStatus = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/api/login-status', {\r\n                withCredentials: true,\r\n            });\r\n            setIsLoggedIn(response.data.isLoggedIn);\r\n        } catch (error) {\r\n            console.error('Error checking login status:', error);\r\n        }\r\n    };\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/api/logout', {\r\n                withCredentials: true,\r\n            });\r\n            if (response.data.success) {\r\n                setIsLoggedIn(false);\r\n                navigate('/login'); // Redirect to login page after logout\r\n            }\r\n        } catch (error) {\r\n            console.error('Error logging out:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>Tumo Task</h1>\r\n            {isLoggedIn ? (\r\n                <div className=\"buttons-container\">\r\n                    <button onClick={handleLogout}>Logout</button>\r\n                </div>\r\n            ) : null}\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMU,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZU,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,wCAAwC,EAAE;QACvEC,eAAe,EAAE;MACrB,CAAC,CAAC;MACFL,aAAa,CAACG,QAAQ,CAACG,IAAI,CAACP,UAAU,CAAC;IAC3C,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMN,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,kCAAkC,EAAE;QACjEC,eAAe,EAAE;MACrB,CAAC,CAAC;MACF,IAAIF,QAAQ,CAACG,IAAI,CAACI,OAAO,EAAE;QACvBV,aAAa,CAAC,KAAK,CAAC;QACpBC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACxB;IACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC9C;EACJ,CAAC;EAED,oBACIX,OAAA;IAAQe,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACtBhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBjB,UAAU,gBACPH,OAAA;MAAKe,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAC9BhB,OAAA;QAAQqB,OAAO,EAAER,YAAa;QAAAG,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,GACN,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEjB;AAAClB,EAAA,CA3CQD,MAAM;EAAA,QAEMH,WAAW;AAAA;AAAAwB,EAAA,GAFvBrB,MAAM;AA6Cf,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}