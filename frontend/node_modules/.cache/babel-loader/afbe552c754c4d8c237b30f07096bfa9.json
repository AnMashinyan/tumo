{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ani Mashinyan\\\\PhpstormProjects\\\\tumo_task\\\\frontend\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './style.css';\nimport { Link } from 'react-router-dom';\nimport CityCountryService from '../../engine/project/CityCountryService.php'; // Import the service for fetching city/country data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [age, setAge] = useState('');\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/http://localhost:8000/api/register', {\n        email,\n        password,\n        firstName,\n        lastName,\n        age,\n        city_id: selectedCity\n      });\n      alert(response.data.message);\n    } catch (error) {\n      alert('Registration failed: ' + error.message);\n    }\n  };\n\n  // Instantiate CityCountryService\n  const cityCountryService = new CityCountryService();\n  useEffect(() => {\n    // Fetch countries using CityCountryService\n    const fetchCountries = async () => {\n      try {\n        const countries = await cityCountryService.getCountries();\n        setCountries(countries);\n      } catch (error) {\n        console.error('Error fetching countries:', error);\n      }\n    };\n    fetchCountries();\n  }, []);\n  const handleCountryChange = async e => {\n    const countryId = parseInt(e.target.value);\n    setSelectedCountry(countryId);\n\n    // Fetch cities for the selected country using CityCountryService\n    try {\n      const cities = await cityCountryService.getCitiesByCountry(countryId);\n      setCities(cities);\n      // Set default city selection to the first city in the list\n      setSelectedCity(cities.length > 0 ? cities[0].id : '');\n    } catch (error) {\n      console.error(`Error fetching cities for country ${countryId}:`, error);\n      setCities([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Age\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCountry,\n        onChange: handleCountryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.id,\n          children: country.name\n        }, country.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCity,\n        onChange: e => setSelectedCity(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.id,\n          children: city.name\n        }, city.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"register-text\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"login-link\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"TwB4pK5z6TDHZTiBZ3/2cwDD1P8=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","CityCountryService","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","age","setAge","countries","setCountries","selectedCountry","setSelectedCountry","cities","setCities","selectedCity","setSelectedCity","handleSubmit","e","preventDefault","response","post","city_id","alert","data","message","error","cityCountryService","fetchCountries","getCountries","console","handleCountryChange","countryId","parseInt","target","value","getCitiesByCountry","length","id","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","map","country","name","city","to","_c","$RefreshReg$"],"sources":["C:/Users/Ani Mashinyan/PhpstormProjects/tumo_task/frontend/src/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport CityCountryService from '../../engine/project/CityCountryService.php'; // Import the service for fetching city/country data\r\n\r\nfunction Register() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [countries, setCountries] = useState([]);\r\n    const [selectedCountry, setSelectedCountry] = useState('');\r\n    const [cities, setCities] = useState([]);\r\n    const [selectedCity, setSelectedCity] = useState('');\r\n\r\n  \r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post('/http://localhost:8000/api/register', {\r\n                email, password, firstName, lastName, age, city_id: selectedCity\r\n            });\r\n            alert(response.data.message);\r\n        } catch (error) {\r\n            alert('Registration failed: ' + error.message);\r\n        }\r\n    }\r\n\r\n    // Instantiate CityCountryService\r\n    const cityCountryService = new CityCountryService();\r\n\r\n    useEffect(() => {\r\n        // Fetch countries using CityCountryService\r\n        const fetchCountries = async () => {\r\n            try {\r\n                const countries = await cityCountryService.getCountries();\r\n                setCountries(countries);\r\n            } catch (error) {\r\n                console.error('Error fetching countries:', error);\r\n            }\r\n        };\r\n\r\n        fetchCountries();\r\n    }, []);\r\n\r\n    const handleCountryChange = async (e) => {\r\n        const countryId = parseInt(e.target.value);\r\n        setSelectedCountry(countryId);\r\n\r\n        // Fetch cities for the selected country using CityCountryService\r\n        try {\r\n            const cities = await cityCountryService.getCitiesByCountry(countryId);\r\n            setCities(cities);\r\n            // Set default city selection to the first city in the list\r\n            setSelectedCity(cities.length > 0 ? cities[0].id : '');\r\n        } catch (error) {\r\n            console.error(`Error fetching cities for country ${countryId}:`, error);\r\n            setCities([]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <form onSubmit={handleSubmit} className=\"register-form\">\r\n                <h2>Register</h2>\r\n                <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                <input type=\"text\" placeholder=\"First Name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} required />\r\n                <input type=\"text\" placeholder=\"Last Name\" value={lastName} onChange={(e) => setLastName(e.target.value)} required />\r\n                <input type=\"number\" placeholder=\"Age\" value={age} onChange={(e) => setAge(e.target.value)} required />\r\n\r\n                <select value={selectedCountry} onChange={handleCountryChange}>\r\n                    <option value=\"\">Select Country</option>\r\n                    {countries.map(country => (\r\n                        <option key={country.id} value={country.id}>{country.name}</option>\r\n                    ))}\r\n                </select>\r\n\r\n                <select value={selectedCity} onChange={(e) => setSelectedCity(e.target.value)}>\r\n                    <option value=\"\">Select City</option>\r\n                    {cities.map(city => (\r\n                        <option key={city.id} value={city.id}>{city.name}</option>\r\n                    ))}\r\n                </select>\r\n\r\n                <button type=\"submit\">Register</button>\r\n                <p className=\"register-text\">Already have an account? <Link to=\"/login\" className=\"login-link\">Login</Link></p>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}