{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ani Mashinyan\\\\PhpstormProjects\\\\tumo_task\\\\frontend\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './style.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [age, setAge] = useState('');\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  useEffect(() => {\n    // Fetch countries from API\n    const fetchCountries = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/countries');\n        setCountries(response.data); // Assuming response.data is an array of countries\n      } catch (error) {\n        console.error('Error fetching countries:', error);\n      }\n    };\n    fetchCountries();\n  }, []);\n  useEffect(() => {\n    // Fetch cities when selectedCountry changes\n    if (selectedCountry) {\n      const fetchCities = async () => {\n        try {\n          const response = await axios.get(`http://localhost:8000/api/cities?country=${selectedCountry}`);\n          setCities(response.data); // Assuming response.data is an array of cities\n        } catch (error) {\n          console.error(`Error fetching cities for country ${selectedCountry}:`, error);\n        }\n      };\n      fetchCities();\n    }\n  }, [selectedCountry]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/api/register', {\n        email,\n        password,\n        firstName,\n        lastName,\n        age,\n        city_id: selectedCity\n      });\n      alert(response.data.message); // Display success message\n    } catch (error) {\n      alert('Registration failed: ' + error.message); // Display error message\n    }\n  };\n  const handleCountryChange = e => {\n    const countryId = e.target.value;\n    setSelectedCountry(countryId);\n    // Clear cities when country changes\n    setCities([]);\n    // Optionally set default city based on country (if needed)\n    // setSelectedCity(...);\n  };\n\n  // Render component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Age\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCountry,\n        onChange: handleCountryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), countries && countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.id,\n          children: country.name\n        }, country.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCity,\n        onChange: e => setSelectedCity(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), cities && cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.id,\n          children: city.name\n        }, city.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"register-text\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"login-link\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"2cUft6kvrmL0sKF66fRW+SByKK4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","age","setAge","countries","setCountries","selectedCountry","setSelectedCountry","cities","setCities","selectedCity","setSelectedCity","fetchCountries","response","get","data","error","console","fetchCities","handleSubmit","e","preventDefault","post","city_id","alert","message","handleCountryChange","countryId","target","value","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","map","country","id","name","city","to","_c","$RefreshReg$"],"sources":["C:/Users/Ani Mashinyan/PhpstormProjects/tumo_task/frontend/src/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [countries, setCountries] = useState([]);\r\n    const [selectedCountry, setSelectedCountry] = useState('');\r\n    const [cities, setCities] = useState([]);\r\n    const [selectedCity, setSelectedCity] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Fetch countries from API\r\n        const fetchCountries = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/api/countries');\r\n                setCountries(response.data); // Assuming response.data is an array of countries\r\n            } catch (error) {\r\n                console.error('Error fetching countries:', error);\r\n            }\r\n        };\r\n\r\n        fetchCountries();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Fetch cities when selectedCountry changes\r\n        if (selectedCountry) {\r\n            const fetchCities = async () => {\r\n                try {\r\n                    const response = await axios.get(`http://localhost:8000/api/cities?country=${selectedCountry}`);\r\n                    setCities(response.data); // Assuming response.data is an array of cities\r\n                } catch (error) {\r\n                    console.error(`Error fetching cities for country ${selectedCountry}:`, error);\r\n                }\r\n            };\r\n\r\n            fetchCities();\r\n        }\r\n    }, [selectedCountry]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/api/register', {\r\n                email, password, firstName, lastName, age, city_id: selectedCity\r\n            });\r\n            alert(response.data.message); // Display success message\r\n        } catch (error) {\r\n            alert('Registration failed: ' + error.message); // Display error message\r\n        }\r\n    };\r\n\r\n    const handleCountryChange = (e) => {\r\n        const countryId = e.target.value;\r\n        setSelectedCountry(countryId);\r\n        // Clear cities when country changes\r\n        setCities([]);\r\n        // Optionally set default city based on country (if needed)\r\n        // setSelectedCity(...);\r\n    };\r\n\r\n    // Render component\r\n    return (\r\n        <div className=\"register-container\">\r\n            <form onSubmit={handleSubmit} className=\"register-form\">\r\n                <h2>Register</h2>\r\n                <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                <input type=\"text\" placeholder=\"First Name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} required />\r\n                <input type=\"text\" placeholder=\"Last Name\" value={lastName} onChange={(e) => setLastName(e.target.value)} required />\r\n                <input type=\"number\" placeholder=\"Age\" value={age} onChange={(e) => setAge(e.target.value)} required />\r\n\r\n                <select value={selectedCountry} onChange={handleCountryChange}>\r\n                    <option value=\"\">Select Country</option>\r\n                    {countries && countries.map(country => (\r\n                        <option key={country.id} value={country.id}>{country.name}</option>\r\n                    ))}\r\n                </select>\r\n\r\n                <select value={selectedCity} onChange={(e) => setSelectedCity(e.target.value)}>\r\n                    <option value=\"\">Select City</option>\r\n                    {cities && cities.map(city => (\r\n                        <option key={city.id} value={city.id}>{city.name}</option>\r\n                    ))}\r\n                </select>\r\n\r\n                <button type=\"submit\">Register</button>\r\n                <p className=\"register-text\">Already have an account? <Link to=\"/login\" className=\"login-link\">Login</Link></p>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}