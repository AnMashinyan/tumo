{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ani Mashinyan\\\\PhpstormProjects\\\\tumo_task\\\\frontend\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '.login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:8000/login', {\n        username,\n        password\n      });\n      if (response.data.success) {\n        alert('Login successful');\n        // Redirect or perform other actions on successful login\n      } else {\n        setError('Login failed');\n      }\n    } catch (error) {\n      setError('Login failed: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"Zs29VFNQsDcDQ87iUElYTK915HI=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","loading","setLoading","error","setError","handleSubmit","e","preventDefault","response","post","data","success","alert","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Ani Mashinyan/PhpstormProjects/tumo_task/frontend/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '.login.css';\r\nfunction Login() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/login', { username, password });\r\n            if (response.data.success) {\r\n                alert('Login successful');\r\n                // Redirect or perform other actions on successful login\r\n            } else {\r\n                setError('Login failed');\r\n            }\r\n        } catch (error) {\r\n            setError('Login failed: ' + error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <form onSubmit={handleSubmit} className=\"login-form\">\r\n                <h2>Login</h2>\r\n                {error && <div className=\"error-message\">{error}</div>}\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    required\r\n                    className=\"login-input\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                    className=\"login-input\"\r\n                />\r\n                <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n                    {loading ? 'Logging in...' : 'Login'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}